"""ADD_PASSWORD_RESET_03

Revision ID: f9b8c03a6e4e
Revises: b6d61ecf3d59
Create Date: 2025-08-26 11:56:41.411354

"""

from collections.abc import Sequence
from typing import Union

import sqlalchemy as sa
from sqlalchemy.engine.reflection import Inspector

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "f9b8c03a6e4e"
down_revision: Union[str, None] = "b6d61ecf3d59"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    bind = op.get_bind()
    inspector = Inspector.from_engine(bind.engine)
    table_names = inspector.get_table_names()
    # ### commands auto generated by Alembic - please adjust! ###
    if "user_reset_password" not in table_names:
        op.create_table(
            "user_reset_password",
            sa.Column("user_id", sa.Uuid(), nullable=False),
            sa.Column("token_hash", sa.String(), nullable=False),
            sa.Column("expires_at", sa.DateTime(timezone=True), nullable=False),
            sa.Column(
                "id",
                sa.Uuid(),
                server_default=sa.text("gen_random_uuid()"),
                nullable=False,
            ),
            sa.Column(
                "created_at",
                sa.DateTime(),
                server_default=sa.text("now()"),
                nullable=False,
            ),
            sa.Column("updated_at", sa.DateTime(), nullable=True),
            sa.ForeignKeyConstraint(["user_id"], ["auth_user.id"], ondelete="CASCADE"),
            sa.PrimaryKeyConstraint("id"),
        )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("user_reset_password")
    # ### end Alembic commands ###
