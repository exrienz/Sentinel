services:
  prometheus-app:
    image: prom/prometheus:latest
    restart: unless-stopped
    container_name: prometheus-observer
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - monitoring

  grafana:
    image: grafana/grafana
    container_name: grafana-observer
    env_file:
      - .env.dev
    restart: unless-stopped
    depends_on:
      - prometheus-app
      - loki-app
    ports:
      - 3000:3000
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    networks:
      - monitoring

  loki-app:
    image: grafana/loki:latest
    container_name: loki-observer
    restart: unless-stopped
    ports:
      - 3100:3100
    volumes:
      - ./loki/config.yml:/etc/loki/config.yaml
    networks:
      - monitoring

  promtail-app:
    image: grafana/promtail:latest
    container_name: promtail-observer
    restart: unless-stopped
    volumes:
      - ./promtail/config.yml:/etc/promtail/config.yaml  # Mount the Promtail config file
      - /var/run/docker.sock:/var/run/docker.sock # Mount the Docker socket
      # - ./logs:/app/logs # Only needed for file log scraping
    command: ["-config.file=/etc/promtail/config.yaml"]
    depends_on:
      - loki-app
    networks:
      - monitoring

  db:
    image: postgres:17.0-alpine3.20
    container_name: db
    env_file:
      - .env.dev
    networks:
      - sentinel-network
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASS}
    volumes:
      - db_data:/var/lib/postgresql/data

  app:
    build:
      context: .
      dockerfile: dockerfile.dev
    container_name: app
    volumes:
      - ./src:/src
    networks:
      - sentinel-network
      - monitoring
    restart: unless-stopped
    env_file:
      - .env.dev
    depends_on:
      - db
    ports:
      - 8080:8080

networks:
  sentinel-network:
  monitoring:

volumes:
  db_data:
