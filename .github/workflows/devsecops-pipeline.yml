name: DevSecOps Pipeline

on:
  push:
    branches: [main]
  pull_request:

jobs:
  devsecops:
    name: DevSecOps Scan & Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install ruff bandit

    - name: Ruff Lint Fix
      run: ruff check --fix .
      continue-on-error: true

    - name: Ruff Format
      run: ruff format .
      continue-on-error: true

    - name: Bandit Scan
      run: |
        mkdir -p artifacts
        bandit -r ./src -f json -o artifacts/bandit-report.json
      continue-on-error: true

    - name: Trivy SCA Scan
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: fs
        scan-ref: .
        format: json
        output: artifacts/trivy-report.json
      continue-on-error: true

    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@v2
      with:
        projectBaseDir: .
        args: >
          -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      continue-on-error: true

    - name: Set Image Tag
      id: tagger
      run: echo "tag=$(date +'%Y%m%d')-${GITHUB_SHA::7}" >> "$GITHUB_OUTPUT"

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build & Push Docker Image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/python-web:${{ steps.tagger.outputs.tag }}

    - name: Generate SBOM with Trivy
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ secrets.DOCKERHUB_USERNAME }}/python-web:${{ steps.tagger.outputs.tag }}
        format: spdx-json
        output: artifacts/sbom.spdx.json
      continue-on-error: true

    - name: Save Scan Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: scan-reports
        path: artifacts
